#!/usr/bin/env bash
# shellcheck shell=bash
set -uo pipefail

## Silently fall back to "plain" SSH, if:
## - Hashcolor is not found;
## - `ssh` is a part of a pipe command;
## - There are I/O redirections in place.
if ! type hashcolor &>/dev/null || ! [[ -t 0 && -t 1 && -t 2 ]]; then
   exec ssh "${@}"
fi

## Set your fallback FG/BG colors here:
DEFAULT_BG="000000"
DEFAULT_FG="EAEAEA"
## Set this to `false` if autodetection doesn't work for you:
DEF_COLORS_AUTO=true
SSH_OPTIONS=(
    -o "PermitLocalCommand=true"
    -o "LocalCommand=hashcolor %C"
)

## Check that terminal in use is iTerm.app:
is_iterm() {
    [[ "${TERM_PROGRAM:-}" == 'iTerm.app' ]]
}

## Check that terminal in use is iTerm.app v3.5.0 or newer:
is_iterm_350() {
    local _ref="3.5.0" _ver="${TERM_PROGRAM_VERSION:-0.0.0}" \
          _newest=""

    _newest="$(echo -e "${_ref}\n${_ver}" | sort -V | tail -n1)"

    is_iterm && [[ "${_ver}" == "${_newest}" ]]
}

## Reset FG/BG colors using iTerm 3.5's new OSC 110/111:
iterm_reset_colors() {
    printf '\e]110\a\e]111\a'
}

## Set FG/BG colors in terminal:
set_colors() {
    local _fg="${1}" _bg="${2}"
    if [[ "${#_fg}" -gt 6 ]]; then
        _fg="$(sed -E 's#[0-9a-f]{2}(/|$)##g' <<< "${_fg}")"
        _bg="$(sed -E 's#[0-9a-f]{2}(/|$)##g' <<< "${_bg}")"
    fi
    if is_iterm; then
        printf '\e]1337;SetColors=fg=%s\a\e]1337;SetColors=bg=%s\a' "${_fg}" "${_bg}"
    else
        printf '\e]10;#%s\a\e]11;#%s\a' "${_fg}" "${_bg}"
    fi
}

## Query current FG/BG colors using OSC:
query_colors() {
    # shellcheck disable=SC2155
    local _oldstty="$(stty -g)" _terminator=$'\a' _foo="" _fg="" _bg=""
    stty raw -echo min 0

    is_iterm && _terminator=$'\e'
    printf "\e]10;?\a\e]11;?\a" > /dev/tty

    IFS=: read -d "${_terminator}" -t 0.1 -r _foo _fg < /dev/tty
    IFS=: read -d "${_terminator}" -t 0.1 -r _foo _bg < /dev/tty

    stty "${_oldstty}"

    echo "${_fg}" "${_bg}"
}

## Check if we're being called from within the shell:
PARENT_COMMAND="$(ps -o comm= $PPID)"
if [[ "${PARENT_COMMAND}" =~ sh ]]; then

    # It seems that iTerm 3.5.x and newer supports OSC 110/111,
    # so all this is redundant.
    if ! is_iterm_350; then
        def_fg="${DEFAULT_FG}"
        def_bg="${DEFAULT_BG}"
        ## Determine current colors (if enabled):
        if [[ "${DEF_COLORS_AUTO}" == true ]]; then
            read -r def_fg def_bg <<< "$(query_colors)"
        fi
    fi

    # shellcheck disable=SC2029
    ssh "${SSH_OPTIONS[@]}" "${@}"
    ## Capture SSH exit code here, to use it as our own later:
    SSH_EC="$?"
    ## Reset terminal colors to defaults:
    if is_iterm_350; then
        iterm_reset_colors
    else
        set_colors "${def_fg}" "${def_bg}"
    fi
    exit "${SSH_EC}"
else
    exec ssh "${SSH_OPTIONS[@]}" "${@}"
fi
